# Generated by Django 3.1.14 on 2022-09-23 06:13

import apps.fyle.models
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('workspaces', '0025_auto_20220920_1111'),
        ('fyle', '0011_expense_billable'),
    ]

    operations = [
        migrations.AddField(
            model_name='expensegroupsettings',
            name='ccc_expense_state',
            field=models.CharField(default=apps.fyle.models.get_default_expense_state, help_text='state at which the ccc expenses are fetched (PAYMENT_PROCESSING /PAID)', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='expensegroupsettings',
            name='reimbursable_expense_state',
            field=models.CharField(default=apps.fyle.models.get_default_expense_state, help_text='state at which the reimbursable expenses are fetched (PAYMENT_PROCESSING / PAID)', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='expensegroupsettings',
            name='ccc_export_date_type',
            field=models.CharField(default='spent_at', help_text='CCC Export Date', max_length=100),
        ),
        migrations.AlterField(
            model_name='expensegroupsettings',
            name='corporate_credit_card_expense_group_fields',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), default=apps.fyle.models.get_default_ccc_expense_group_fields, help_text='list of fields ccc expenses grouped by', size=None),
        ),
        migrations.AlterField(
            model_name='expensegroupsettings',
            name='expense_state',
            field=models.CharField(default=apps.fyle.models.get_default_expense_state, help_text='state at which expenses are fetched (PAYMENT_PROCESSING / PAID)', max_length=100),
        ),
        migrations.AlterField(
            model_name='expensegroupsettings',
            name='workspace',
            field=models.OneToOneField(help_text='To which workspace this expense group setting belongs to', on_delete=django.db.models.deletion.PROTECT, related_name='expense_group_settings', to='workspaces.workspace'),
        ),
    ]
