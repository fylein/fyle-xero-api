name: Deploy to Production

on:
  release:
    types: [created]

jobs:
  production_deploy:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: push to dockerhub
        uses: fylein/docker-release-action@master
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
          IMAGE_NAME: fyle_xero-api

      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      - name: Clone another repository
        uses: actions/checkout@v2
        with:
          repository: ${{ vars.PROD_DEPLOY_REPO }}
          ref: master
          path: ${{ vars.PROD_DEPLOY_REPO }}
          persist-credentials: false
          token: ${{ secrets.DEPLOY_GIT_ACCESS_TOKEN }}

      - name: Update Image Tag
        run: |
          NEW_TAG="v$(git rev-parse --short HEAD)"
          cd ${{ vars.PROD_DEPLOY_REPO }}/${{ vars.PROD_US1_DEPLOY_DIR }}/integrations
          kustomize edit set image docker.io/${{ secrets.DOCKERHUB_USERNAME }}/fyle_xero-api=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/fyle_xero-api:$NEW_TAG

          cd ../../${{ vars.PROD_IN1_DEPLOY_DIR }}/integrations
          kustomize edit set image docker.io/${{ secrets.DOCKERHUB_USERNAME }}/fyle_xero-api=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/fyle_xero-api:$NEW_TAG

      - name: Commit and push changes
        run: |
          cd ${{ vars.PROD_DEPLOY_REPO }}/
          git config --global user.email "integrations@fylehq.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "Update xero-api image tag"
          git remote set-url origin https://x-access-token:${{ secrets.DEPLOY_GIT_ACCESS_TOKEN }}@github.com/${{ vars.PROD_DEPLOY_REPO }}
          git push origin master
          git push origin master

      - name: Create new Sentry release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: fyle-technologies-private-limi
          SENTRY_PROJECT: xero-api
          SENTRY_DEPLOY_ENVIRONMENT: production
        run: |
          # Install Sentry CLI
          curl -sL https://sentry.io/get-cli/ | bash

          # Create new Sentry release
          export SENTRY_RELEASE=$(sentry-cli releases propose-version)
          sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
          sentry-cli releases set-commits --auto $SENTRY_RELEASE
          sentry-cli releases finalize $SENTRY_RELEASE

          # Create new deploy for this Sentry release
          sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_DEPLOY_ENVIRONMENT
